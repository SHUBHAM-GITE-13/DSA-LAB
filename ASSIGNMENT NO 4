class TextEditor:
    def __init__(self):
        self.undo_stack = []
        self.redo_stack = []
        self.current_state = ""
    
    def make_change(self, new_text):
        self.undo_stack.append(new_text)
        self.current_state = new_text
        self.redo_stack.clear()
        print(f"Change made: '{new_text}'")
    
    def undo(self):
        if not self.undo_stack:
            print("Nothing to undo.")
            return
        last_change = self.undo_stack.pop()
        self.redo_stack.append(last_change)
        self.current_state = self.undo_stack[-1] if self.undo_stack else ""
        print(f"Undo performed. Current state: '{self.current_state}'")
    
    def redo(self):
        if not self.redo_stack:
            print("Nothing to redo.")
            return
        redo_change = self.redo_stack.pop()
        self.undo_stack.append(redo_change)
        self.current_state = redo_change
        print(f"Redo performed. Current state: '{self.current_state}'")
    
    def display(self):
        print(f"Current Document State: '{self.current_state}'")

editor = TextEditor()

editor.make_change("Hello")
editor.make_change("Hello, World")
editor.make_change("Hello, World!")

editor.display()

editor.undo()
editor.display()

editor.undo()
editor.display()

editor.redo()
editor.display()

editor.make_change("Hello, Universe")
editor.display()

editor.redo()
